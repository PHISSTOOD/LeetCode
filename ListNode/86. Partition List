Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.=
You should preserve the original relative order of the nodes in each of the two partitions.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode Ltail = new ListNode(0);
        ListNode Btail = new ListNode(0);
        ListNode result1,result2;
        result1 = Ltail;
        result2 = Btail;
        while(head!=null)
        {
            if(head.val<x)
            {
                Ltail.next = head;
                Ltail = Ltail.next;
                head = head.next;
            }else
            {
                Btail.next = head;
                Btail = Btail.next;
                head = head.next;
            }
        }
        Btail.next = null;
        Ltail.next = result2.next;
        return result1.next;
    }
}
