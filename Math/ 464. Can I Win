In the "100 game" two players take turns adding, to a running total, any integer from 1 to 10. The player who first causes the running total to reach or exceed 100 wins.
What if we change the game so that players cannot re-use integers?
For example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total >= 100.
Given two integers maxChoosableInteger and desiredTotal, return true if the first player to move can force a win, otherwise, return false. Assume both players play optimally.

Solution Description:
The key of this solution is bitmap and dp. Using bitmap to represent a number if it has been used.

Code:
class Solution {
    Boolean[] dp;
    public boolean canIWin(int maxChoosableInteger, int desiredTotal) {
        if(desiredTotal <= maxChoosableInteger){
            return true;
        }
        if((1.0*maxChoosableInteger * (maxChoosableInteger+1) / 2)<desiredTotal){
            return false;
        }
        int state = 0;
        dp = new Boolean[1<<maxChoosableInteger];
        return canIWinPro(state, maxChoosableInteger, desiredTotal, true);
    }
    
    public boolean canIWinPro(int state, int maxChoosableInteger, int desiredTotal, boolean isMyTurn){
        if(dp[state] != null){
            return dp[state];
        }
        if (isMyTurn) {
            for(int i = 1; i<=maxChoosableInteger; i++){
                int cur = 1<<(i-1);
                if((cur&state)==0){
                    if(i>=desiredTotal || !canIWinPro(state|cur, maxChoosableInteger, desiredTotal - i, true)) {
                        dp[state] = true;
                        return dp[state];
                    }
                }
            }
            dp[state] = false;
            return dp[state];
        } else {
            for (int i = 1; i <= maxChoosableInteger; i++) {
                int cur = 1 << (i - 1);
                if ((cur & state) == 0) {
                    if (i >= desiredTotal || !canIWinPro(state|cur, maxChoosableInteger, desiredTotal - i, true)) {
                        dp[state] = false;
                        return dp[state];
                    }
                }
            }
            dp[state] = true;
            return dp[state];
        }
    }
}

Result:
Runtime: 72 ms, faster than 92.46% of Java online submissions for Can I Win.
Memory Usage: 42.2 MB, less than 90.79% of Java online submissions for Can I Win.
