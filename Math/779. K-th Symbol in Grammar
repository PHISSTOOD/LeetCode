On the first row, we write a 0. Now in every subsequent row, 
we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.
Given row N and index K, return the K-th indexed symbol in row N. (The values of K are 1-indexed.) (1 indexed).


import java.lang.Math;
class Solution {
    public int kthGrammar(int N, int K) {
        if(N==1){
            return 0;
        }else if(N==2){
            return (K==1? 0:1);
        }else if(K>Math.pow(2,N-1)/2){
            int temp = 1 - kthGrammar(N-1,K-(int)(Math.pow(2,N-1)/2));
            return temp;
        }else{
            return  kthGrammar(N-1,K);
        }
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for K-th Symbol in Grammar.
Memory Usage: 36.3 MB, less than 16.67% of Java online submissions for K-th Symbol in Grammar.
