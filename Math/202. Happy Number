Write an algorithm to determine if a number is "happy".
A happy number is a number defined by the following process: Starting with any positive integer, 
replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), 
or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

class Solution {
    public static boolean isHappy(int n) {
        int slow=n;
        int fast=n;
        while (true){
            slow=helper(slow);
            fast=helper(fast);
            fast=helper(fast);
            if(slow==1 || fast==1){return true;}
            else if(slow==fast){return false;}
        }
    }
    public static int helper(int n){
        int res=0;
        while (n>0){
            res+=(n%10)*(n%10);
            n/=10;
        }
        return res;
    }
}

Runtime: 1 ms, faster than 99.99% of Java online submissions for Happy Number.
Memory Usage: 34 MB, less than 7.57% of Java online submissions for Happy Number.
