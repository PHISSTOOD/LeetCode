Given an unsorted integer array nums, return the smallest missing positive integer.
You must implement an algorithm that runs in O(n) time and uses constant extra space.

class Solution:
    def firstMissingPositive(self, nums: List[int]) -> int:
        result = 1
        i = 0
        while i < len(nums):
            j = nums[i]
            if j>0 and j<=len(nums) and nums[j-1]!=j:
                nums[i], nums[j-1] = nums[j-1], nums[i]
            else:
                i+=1
        for i in range(len(nums)):
            if nums[i]!=result:
                return result
            else:
                result+=1
        return result
