Given a string s, return the longest palindromic substring in s.

class Solution:
    def longestPalindrome(self, s: str) -> str:
        result = 0
        palindrome = ''
        def helper(s,left,right):
            while left>=0 and right<len(s) and s[left]==s[right]:
                nonlocal result, palindrome
                if (right - left +1)>result:
                    result = right-left+1
                    palindrome = s[left:right+1]
                left -=1
                right += 1
            return
        for i in range(len(s)):
            helper(s,i,i)
            if i+1 <len(s):
                helper(s,i,i+1)
        return palindrome
            
