Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:
'?' Matches any single character.
'*' Matches any sequence of characters (including the empty sequence).
The matching should cover the entire input string (not partial).

class Solution:
    def isMatch(self, s: str, p: str) -> bool:
        m, n = len(s), len(p)
        dp = [[False]*(n+1) for _ in range(m+1)]
        
        dp[0][0] = True
        for i in range(len(p)):
            if p[i]=='*':
                dp[0][i+1] = True
            else:
                break
        
        for i in range(1,len(s)+1):
            for j in range(1,len(p)+1):
                if p[j-1] == "*":
                    dp[i][j] = dp[i-1][j] or dp[i][j-1]
                elif p[j-1] == s[i-1] or p[j-1]=='?':
                    dp[i][j] = dp[i-1][j-1]
        
        return dp[m][n]
