Given a string s and a string t, check if s is subsequence of t.
You may assume that there is only lower case English letters in both s and t.
t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).
A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) 
of the characters without disturbing the relative positions of the remaining characters.
(ie, "ace" is a subsequence of "abcde" while "aec" is not).

class Solution {
    public boolean isSubsequence(String s, String t) {
        int i=0;
        for(int j=0; i < s.length() && j < t.length(); j++){
            if(s.charAt(i) == t.charAt(j))
                ++i;
        }
        return i == s.length();
    }
}

Runtime: 13 ms, faster than 70.25% of Java online submissions for Is Subsequence.
Memory Usage: 48.2 MB, less than 100.00% of Java online submissions for Is Subsequence.
