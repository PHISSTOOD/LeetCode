A string S of lowercase letters is given. 
We want to partition this string into as many parts as possible so that each letter appears in at most one part, 
and return a list of integers representing the size of these parts.

class Solution {
    public List<Integer> partitionLabels(String S) {
        int[] last = new int[26];
        for(int i = 0;i<S.length();i++)
        {
            last[S.charAt(i)-'a'] = i;
        }
        int cur=0,anchor = 0;
        List<Integer> result = new ArrayList();
        for(int i = 0;i<S.length();i++)
        {
            cur = Math.max(cur,last[S.charAt(i)-'a']);
            if(i==cur)
            {
                result.add(i-anchor+1);
                anchor = i+1;
            }
        }
        return result;
    }
}
