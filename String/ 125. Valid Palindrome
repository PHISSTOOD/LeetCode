Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.
Note: For the purpose of this problem, we define empty string as valid palindrome.

class Solution {
    public boolean isPalindrome(String s) 
    {
        if(s.length()==1 || s==null ||s.length()==0)
        {
            return true;
        }
        int len = s.length();
        int start = 0;
        int end = len-1;
        while(start<end)
        {
            while(start<len && !isValid(s.charAt(start)))
            {
                start++;
            }
            while(end>0 && !isValid(s.charAt(end)))
            {
                end--;
            }
            if(start<end && !compare(s.charAt(start),s.charAt(end)))
            {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }    
    private boolean compare(char x,char y)
    {
        return Character.toLowerCase(x) == Character.toLowerCase(y);
    }
    private boolean isValid(char c) {
        if (c >= '0' &&  c <= '9') return true;
        if (c >= 'a' &&  c <= 'z') return true;
        if (c >= 'A' &&  c <= 'Z') return true;
        return false;
    }
}
