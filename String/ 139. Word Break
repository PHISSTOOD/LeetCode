Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, 
determine if s can be segmented into a space-separated sequence of one or more dictionary words.
Note:
The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.

class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        int length = s.length();
        boolean[] help = new boolean[length+1];
        help[0] = true;
        int maxlength = 0;
        for(int i = 0;i<wordDict.size();i++)
        {
            maxlength = Math.max(maxlength,wordDict.get(i).length());
        }
        for(int i = 0;i<length;i++)
        {
            if(help[i]==true)
            {
                for(int j = 1;j<=maxlength && i+j<=length;j++)
                {
                    if(wordDict.contains(s.substring(i,i+j)))
                    {
                        help[i+j] = true;
                    }
                }
            }
        }
        return help[length];
    }
}
