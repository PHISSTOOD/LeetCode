A string is called happy if it does not have any of the strings 'aaa', 'bbb' or 'ccc' as a substring.
Given three integers a, b and c, return any string s, which satisfies following conditions:
s is happy and longest possible.
s contains at most a occurrences of the letter 'a', at most b occurrences of the letter 'b' and at most c occurrences of the letter 'c'.
s will only contain 'a', 'b' and 'c' letters.
If there is no such string s return the empty string "".


Solution:
class Solution {
    public String longestDiverseString(int a, int b, int c) {
        int ARecord = 0;
        int BRecord = 0;
        int CRecord = 0;
        StringBuilder sb = new StringBuilder();
        int total = a+b+c;
        int i = 0;
        while(i<total){
            if((a>=b && a>=c && ARecord<2) || (BRecord==2 && a>0) ||(CRecord==2 && a>0)){
                ARecord ++;
                a--;
                BRecord = 0;
                CRecord = 0;
                sb.append('a');
            }else if((b>=a && b>=c && BRecord<2) || (ARecord==2 && b>0) ||(CRecord==2 && b>0)){
                BRecord ++;
                b--;
                ARecord = 0;
                CRecord = 0;
                sb.append('b');
            }else if((c>=a && c>=b && CRecord<2) || (ARecord==2 && c>0) ||(BRecord==2 && c>0)){
                CRecord ++;
                c--;
                BRecord = 0;
                ARecord = 0;
                sb.append('c');
            }
            i++;
        }
        return sb.toString();
    }
}

Result:
Runtime: 0 ms, faster than 100.00% of Java online submissions for Longest Happy String.
Memory Usage: 36 MB, less than 86.16% of Java online submissions for Longest Happy String.
