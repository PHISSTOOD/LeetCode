In a given 2D binary array grid, there are two islands.  (An island is a 4-directionally connected group of 1s not connected to any other 1s.)
Now, we may change 0s to 1s so as to connect the two islands together to form 1 island.
Return the smallest number of 0s that must be flipped.  (It is guaranteed that the answer is at least 1.)


class Solution {
    int[][] dirs = new int[][]{{0,1},{0,-1},{1,0},{-1,0}};
    public int shortestBridge(int[][] grid) {
        Queue<int[]> queue = new LinkedList();
        loop:
        for(int i = 0; i<grid.length; i++){
            for(int j = 0; j<grid[0].length; j++){
                if(grid[i][j]==1){
                    dfs(grid, i, j, queue);
                    break loop;
                }
            }
        }
        int length = 1;
        while(!queue.isEmpty()){
            int size = queue.size();
            for(int i = 0; i<size; i++){
                int[] cur = queue.poll();
                for(int[] dir : dirs){
                    int newx = cur[0]+dir[0];
                    int newy = cur[1]+dir[1];
                    if(newx>=0 && newx<grid.length && newy>=0 && newy<grid[0].length){
                        if(grid[newx][newy]==0){
                            queue.offer(new int[]{newx, newy});
                            grid[newx][newy] = 2;
                        }else if(grid[newx][newy]==1){
                            return length;
                        }
                    }
                }
            }
            length++;
        }
        return 0;
    }

    public void dfs(int[][] grid, int x, int y, Queue<int[]> queue){
        grid[x][y] = 3;
        for(int[] dir : dirs){
            int newx = x+dir[0];
            int newy = y+dir[1];
            if(newx>=0 && newx<grid.length && newy>=0 && newy<grid[0].length){
                if(grid[newx][newy]==0){
                    queue.offer(new int[]{newx, newy});
                    grid[newx][newy] = 2;
                }else if(grid[newx][newy]==1){
                    dfs(grid, newx, newy, queue);
                }
            }
        }
    }
}

Result:
Runtime: 5 ms, faster than 99.69% of Java online submissions for Shortest Bridge.
Memory Usage: 39.7 MB, less than 84.31% of Java online submissions for Shortest Bridge.
