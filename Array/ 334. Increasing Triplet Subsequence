Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.
Formally the function should:
Return true if there exists i, j, k
such that arr[i] < arr[j] < arr[k] given 0 ≤ i < j < k ≤ n-1 else return false.

class Solution {
    public boolean increasingTriplet(int[] nums) {
        int min1 = Integer.MAX_VALUE;
        int min2 = Integer.MAX_VALUE;
        if(nums.length<3)
        {
            return false;
        }
        for(int i : nums)
        {
            if(i<min1)
            {
                min1 = i;
            }
            if(i>min1)
            {
                min2 = Math.min(i,min2);
            }
            if(i>min2)
            {
                return true;
            }
        }
        return false;
    }
}

Runtime: 0 ms, faster than 100.00% of Java online submissions for Increasing Triplet Subsequence.
Memory Usage: 38.9 MB, less than 95.35% of Java online submissions for Increasing Triplet Subsequence.
