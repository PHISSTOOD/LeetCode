You are given an integer n. An array nums of length n + 1 is generated in the following way:
nums[0] = 0
nums[1] = 1
nums[2 * i] = nums[i] when 2 <= 2 * i <= n
nums[2 * i + 1] = nums[i] + nums[i + 1] when 2 <= 2 * i + 1 <= n
Return the maximum integer in the array nums.

Code:
class Solution {
    public int getMaximumGenerated(int n) {
        if(n<=1){
            return n;
        }
        int result = 0;
        int[] record = new int[n+1];
        record[0] = 0;
        record[1] = 1;
        for(int i = 2; i<n+1; i++){
            if(i%2 == 0){
                record[i] = record[i/2];
            }else{
                record[i] = record[i/2]+record[i/2+1];
            }
            result = Math.max(result,record[i]);
        }
        return result;
    }
}

Result:
Runtime: 0 ms, faster than 100.00% of Java online submissions for Get Maximum in Generated Array.
Memory Usage: 35.9 MB, less than 46.30% of Java online submissions for Get Maximum in Generated Array.
