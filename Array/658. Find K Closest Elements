Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.
An integer a is closer to x than an integer b if:
|a - x| < |b - x|, or
|a - x| == |b - x| and a < b

Solution description:

class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        int left = 0, right = arr.length-1;
        int mid = 0;
        while(left<=right){
            mid = (left+right)/2;
            if(arr[mid]>x){
                right = mid-1;
            }else if(arr[mid]<x){
                left = mid+1;
            }else{
                break;
            }
        }
        left = Math.max(0,mid-1);
        right = left+1;
        List<Integer> result = new ArrayList();
        while(right-left-1<k){
            if(left==-1){
                right++;
            }else if(right==arr.length || (x-arr[left])<=(arr[right]-x)){
                    left--;
            }else{
                right++;
            }
        }
        for(int i = left+1;i<right;i++){
            result.add(arr[i]);
        }
        return result;
    }
}

Result:
Runtime: 3 ms, faster than 96.95% of Java online submissions for Find K Closest Elements.
Memory Usage: 40.7 MB, less than 69.20% of Java online submissions for Find K Closest Elements.
