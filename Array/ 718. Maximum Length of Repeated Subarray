Given two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays.

Solution Description:
Using dynamic programming to calculate it, very similar to longest subsequence string.
Code:
class Solution {
    public int findLength(int[] nums1, int[] nums2) {
        int[][] dp = new int[nums1.length+1][nums2.length+1];
        int result = 0;
        for(int i = 0; i < nums1.length; i++){
            for(int j = 0; j<nums2.length; j++){
                if(nums1[i]==nums2[j]){
                    dp[i+1][j+1] = dp[i][j] +1;
                    result = Math.max(result,dp[i+1][j+1]);
                }
            }
        }
        return result;
    }
}

Result:
Runtime: 35 ms, faster than 95.91% of Java online submissions for Maximum Length of Repeated Subarray.
Memory Usage: 48 MB, less than 42.04% of Java online submissions for Maximum Length of Repeated Subarray.
