Given an array nums, there is a sliding window of size k which is moving from the very left of the array to the very right. 
You can only see the k numbers in the window. 
Each time the sliding window moves right by one position. Return the max sliding window.

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if(nums.length==0)
        {
            return new int[0];
        }
        int[] result = new int[nums.length-k+1];
        int maxpos = -1;
        for(int i = 0;i<nums.length-k+1;i++)
        {
            int tail = i+k;
            int max = Integer.MIN_VALUE;
            if(maxpos == -1 || maxpos<i)
            {
                for(int j = i;j<tail;j++)
                {
                    if(nums[j]>max)
                    {
                        max = nums[j];
                        maxpos = j;
                    }
                }
            }else
            {
                if(nums[tail-1]>nums[maxpos])
                {                    
                    maxpos = tail-1;
                }
            }
            result[i] = nums[maxpos];
        }
        return result;
    }
}
