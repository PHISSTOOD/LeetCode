Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.

Solution Description:
List all posible situation and when the situation occur how to operate the x and y.

Code:
class Solution {
    public int[] findDiagonalOrder(int[][] mat) {
        int width = mat.length;
        int length = mat[0].length;
        int[] result = new int[width*length];
        int flag = 1;
        int x = 0, y = 0;
        for(int i = 0;i<result.length; i++){
            result[i] = mat[y][x];
            if(x==length-1 && flag == 1){
                y += 1;
                flag = 0;
            }else if(y==width-1 && flag == 0){
                x += 1;
                flag = 1;
            }else if(y==0 && flag == 1){
                x += 1;
                flag = 0;
            }else if(x==0 && flag == 0){
                y += 1;
                flag = 1;
            }else if(flag == 1){
                x+=1;
                y-=1;
            }else{
                x-=1;
                y+=1;
            }
        }
        return result;
    }
}

Result:
Runtime: 2 ms, faster than 93.26% of Java online submissions for Diagonal Traverse.
Memory Usage: 41.1 MB, less than 61.35% of Java online submissions for Diagonal Traverse.
