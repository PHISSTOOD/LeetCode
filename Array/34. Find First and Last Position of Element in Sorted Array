Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm's runtime complexity must be in the order of O(log n).
If the target is not found in the array, return [-1, -1].

class Solution {
    public int[] searchRange(int[] nums, int target) {
        int i,j,n;
        n = nums.length;
        int[] result = new int[2];
        if(n==0)
        {
            result[0] = -1;
            result[1] = -1;
            return result;
        }
        result[0] = -1;
        result[1] = -1;
        for(i = 0;i<n;i++)
        {
            if(nums[i]==target)
            {
                result[0] = i;
                result[1] = i;
                for(j = i;j<n;j++)
                {
                    if(j==n-1)
                    {
                        result[1] = n-1;
                    }
                    if(nums[j]!=target)
                    {
                        result[1] = j-1;
                        break;
                    }
                }
                break;
            }
        }
        return result;
        
    }
}
