Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:
Integers in each row are sorted in ascending from left to right.
Integers in each column are sorted in ascending from top to bottom.

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int i = matrix.length-1;
        int j = 0;
        for(;i>=0 && j<matrix[0].length;)
        {
            if(matrix[i][j]==target)
            {
                return true;
            }else if(matrix[i][j]<target)
            {
                j++;
            }else
            {
                i--;
            }
        }
        return false;
    }
}
