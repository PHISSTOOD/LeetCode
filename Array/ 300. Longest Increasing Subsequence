Given an unsorted array of integers, find the length of longest increasing subsequence.

class Solution {
    public int lengthOfLIS(int[] nums) {
        int[] dp = new int[nums.length];
        if(nums.length<=1)
        {
            return nums.length;
        }
        int result = 0;
        dp[0] = 1;
        for(int i = 1;i<nums.length;i++)
        {
            int cur = 0;
            for(int j = 0;j<i;j++)
            {
                if(nums[i]>nums[j])
                {
                    cur = Math.max(cur,dp[j]);
                }
            }
            dp[i] = cur+1;
            result = Math.max(result,dp[i]);
        }
        return result;
    }
}

Runtime: 7 ms, faster than 70.31% of Java online submissions for Longest Increasing Subsequence.
Memory Usage: 36.6 MB, less than 100.00% of Java online submissions for Longest Increasing Subsequence.
