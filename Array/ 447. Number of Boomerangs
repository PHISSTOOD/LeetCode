Given n points in the plane that are all pairwise distinct, a "boomerang" is a tuple of points (i, j, k) 
such that the distance between i and j equals the distance between i and k (the order of the tuple matters).
Find the number of boomerangs. 
You may assume that n will be at most 500 and coordinates of points are all in the range [-10000, 10000] (inclusive).

class Solution {
    public int numberOfBoomerangs(int[][] points) {
        int result = 0;
        HashMap<Integer,Integer> map = new HashMap();
        for(int i = 0;i<points.length;i++)
        {
            for(int j = 0;j<points.length;j++)
            {
                if(j==i)
                {
                    continue;
                }
                int d = distance(points[i],points[j]);
                map.put(d,map.getOrDefault(d,0)+1);
            }
            for(int v : map.values())
            {
                result += v*(v-1);
            }
            map.clear();
        }
        return result;
    }
    private int distance(int[] i,int[] j)
    {
        return (int)(Math.pow((j[0]-i[0]),2) + Math.pow((j[1]-i[1]),2)) ;
    }
}
