Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e., [0,0,1,2,2,5,6] might become [2,5,6,0,0,1,2]).
You are given a target value to search. If found in the array return true, otherwise return false.

class Solution {
    public boolean search(int[] nums, int target) {
        int low = 0;
        int high = nums.length-1;
        while(low<=high)
        {
            int mid = (low + high) / 2;
            if (nums[mid] == target) return true;
            if (nums[low] == target) return true;
            if(nums[high]==target) return true;

            if (nums[mid] == nums[low])
            {
                if (nums[low] == target) return true;
                else low++;
            }
            else if (nums[mid] > nums[low])
            {
                if(target > nums[low])
                {
                    if(target>nums[mid])
                    {
                        low = mid+1;
                    }
                    else
                    {
                        high = mid-1;
                    }
                }
                else
                {
                    low = mid+1;
                }
            }
            
            else
            {
                if (target > nums[low])
                {
                    high = mid - 1;
                }
                else
                {
                    if (target > nums[mid])
                    {
                        low = mid + 1;
                    }
                    else
                    {
                        high = mid - 1;   
                    }
                }
            }
        }
        return false;
    }
}

