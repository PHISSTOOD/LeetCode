class Solution {
    public boolean makesquare(int[] matchsticks) {
        int sum = 0;
        for(int num : matchsticks){
            sum += num;
        }
        if(sum%4!=0){
            return false;
        }
        boolean[] use = new boolean[matchsticks.length];
        return dfs(0, 0, 0, matchsticks, use, sum/4);
    }
    
    public boolean dfs(int num, int cur, int index, int[] matchsticks, boolean[] use, int target){
        if(num==4){
            return true;
        }
        if(cur==target){
            return dfs(num+1, 0, 0, matchsticks, use, target);
        }else{
            for(int i = index; i<matchsticks.length; i++){
                if(use[i]==false && cur+matchsticks[i]<=target){
                    use[i] = true;
                    boolean curResult = dfs(num, cur+matchsticks[i], i+1, matchsticks, use, target);
                    use[i] = false;
                    if(curResult==true){
                        return true;
                    }
                }
            }
            return false;
        }
    }
}
