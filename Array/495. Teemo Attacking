Our hero Teemo is attacking an enemy Ashe with poison attacks! When Teemo attacks Ashe, Ashe gets poisoned for a exactly duration seconds. 
More formally, an attack at second t will mean Ashe is poisoned during the inclusive time interval [t, t + duration - 1]. 
If Teemo attacks again before the poison effect ends, the timer for it is reset, and the poison effect will end duration seconds after the new attack.
You are given a non-decreasing integer array timeSeries, where timeSeries[i] denotes that Teemo attacks Ashe at second timeSeries[i], and an integer duration.
Return the total number of seconds that Ashe is poisoned.

class Solution {
    public int findPoisonedDuration(int[] timeSeries, int duration) {
        int result = 0;
        if(timeSeries.length==0){
            return 0;
        }
        if(timeSeries.length==1){
            return duration;
        }
        for(int i = 1; i<timeSeries.length; i++){
            if(timeSeries[i]-timeSeries[i-1]>duration){
                result += duration;
            }else{
                result += (timeSeries[i]-timeSeries[i-1]);
            }
        }
        result += duration;
        return result;
    }
}

Result:
Runtime: 1 ms, faster than 100.00% of Java online submissions for Teemo Attacking.
Memory Usage: 40.8 MB, less than 71.38% of Java online submissions for Teemo Attacking.
