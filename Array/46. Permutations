Given a collection of distinct integers, return all possible permutations.

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        List<Integer> choice = new ArrayList<>();
        if(nums.length ==0)
        {
            return result;
        }
        for(int i = 0;i<nums.length;i++)
        {
            choice.add(nums[i]);
        }
        List<Integer> current = new ArrayList<>();
        possible(result,choice,current);
        return result;
    }
    private void possible(List<List<Integer>> result,List<Integer> choice,List<Integer>current)
    {
        if(choice.size()==0)
        {
            result.add(new ArrayList<Integer>(current));
        }
        else
        {
            for(int i = 0;i<choice.size();i++)
            {
                List<Integer> newchoice = new ArrayList<>(choice);
                current.add(choice.get(i));
                newchoice.remove(i);
                possible(result,newchoice,current);
                current.remove(current.size()-1);
            }
        }
    }
}
