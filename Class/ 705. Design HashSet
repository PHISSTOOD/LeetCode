Design a HashSet without using any built-in hash table libraries.
To be specific, your design should include these functions:
add(value): Insert a value into the HashSet. 
contains(value) : Return whether the value exists in the HashSet or not.
remove(value): Remove a value in the HashSet. If the value does not exist in the HashSet, do nothing.

class MyHashSet {
    int[] set;
    /** Initialize your data structure here. */
    public MyHashSet() {
        set = new int[1000001];
        Arrays.fill(set,-1);
    }
    
    public void add(int key) {
        if(set[key]==-1){
            set[key] = 1;
        }
    }
    
    public void remove(int key) {
        if(set[key]==1){
            set[key] = -1;
        }
    }
    
    /** Returns true if this set contains the specified element */
    public boolean contains(int key) {
        if(set[key]==1){
            return true;
        }
        return false;
    }
}

Runtime: 77 ms, faster than 13.59% of Java online submissions for Design HashSet.
Memory Usage: 77.3 MB, less than 11.11% of Java online submissions for Design HashSet.
