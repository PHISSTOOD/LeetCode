An attendance record for a student can be represented as a string where each character signifies whether the student was absent, late, or present on that day.
The record only contains the following three characters:
'A': Absent.
'L': Late.
'P': Present.
Any student is eligible for an attendance award if they meet both of the following criteria:
The student was absent ('A') for strictly fewer than 2 days total.
The student was never late ('L') for 3 or more consecutive days.
Given an integer n, return the number of possible attendance records of length n that make a student eligible for an attendance award. 
The answer may be very large, so return it modulo 109 + 7.


Codeï¼š
class Solution {
    static final int mod = (int) (1e9+7);
    public int checkRecord(int n){
        long[] P = new long[n+1]; //end with P w/o A
        long[] L = new long[n+1]; //end with L w/o A
        P[0] = P[1] = L[1] = 1;
        for(int i = 2; i <= n; i++){
            P[i] = (P[i-1] + L[i-1]) % mod;
            L[i] = (P[i-1] + P[i-2]) % mod;
        }
        long res = (P[n] + L[n]) % mod;
        //insert A 
        for(int i = 0; i < n; i++){ 
            long s = ((P[i] + L[i])%mod * (P[n-i-1] + L[n-i-1])%mod )% mod;
            res = (res + s) % mod;
        }
        return (int) res;
    }
}


Runtime: 190 ms, faster than 39.86% of Java online submissions for Student Attendance Record II.
Memory Usage: 68.2 MB, less than 35.09% of Java online submissions for Student Attendance Record II.
