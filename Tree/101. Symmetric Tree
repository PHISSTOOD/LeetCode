Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).
For example, this binary tree [1,2,2,3,4,4,3] is symmetric:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return mirror (root,root);        
    }
    public boolean mirror (TreeNode left, TreeNode right)
    {
        if(left == null && right == null)
        {
            return true;
        }else if(left == null || right == null)
        {
            return false;
        }
        if(left.val!=right.val)
        {
            return false;
        }else
        {
            return mirror(left.left,right.right)&&mirror(left.right, right.left);
        }

    }
}
