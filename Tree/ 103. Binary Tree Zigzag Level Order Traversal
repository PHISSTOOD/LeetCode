Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, 
then right to left for the next level and alternate between).
For example:
Given binary tree [3,9,20,null,null,15,7],

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
    List<List<Integer>> result = new ArrayList<>();
        if(root == null)
        {
            return result;
        }
        create(result,root,0);
        return result;
        
    }
    private void create(List<List<Integer>>result, TreeNode cur, int level)
    {
        if(cur==null)
        {
            return;
        }
        if(level>=result.size())
        {
            List<Integer> list = new ArrayList<>();
            result.add(list);
        }
        if(level % 2 ==0)
        {
            result.get(level).add(cur.val);
        }else if(level % 2 ==1)
        {
            result.get(level).add(0,cur.val);
        }
        create(result,cur.left,level+1);
        create(result,cur.right,level+1);
    }

}
