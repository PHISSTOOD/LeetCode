Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.
Note: 
You may assume k is always valid, 1 ≤ k ≤ BST's total elements.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int count = 0;
    int result = 0;
    public int kthSmallest(TreeNode root, int k) {
        if(root==null)
        {
            return 0;
        }
        search(k,root);
        return result;
    }
    private void search( int k, TreeNode cur)
    {
        if(cur.left!=null)
        {
            search(k,cur.left);
        }
        count++;
        if(count==k)
        {
            result = cur.val;
        }
        if(cur.right!=null)
        {
            search(k,cur.right);
        }
    }
}
