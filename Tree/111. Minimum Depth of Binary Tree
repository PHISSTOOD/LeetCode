Given a binary tree, find its minimum depth.
The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
Note: A leaf is a node with no children.

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int result = Integer.MAX_VALUE;
    public int minDepth(TreeNode root) {
        if(root==null)
        {
            return 0 ;
        }
        find(root,1);
        return result;
    }
    private void find(TreeNode cur,int level)
    {
        if(level>=result || cur==null)
        {
            return;
        }else if(cur.left==null && cur.right==null)
        {
            result = Math.min(level,result);
            return;
        }
        find(cur.left,level+1);
        find(cur.right,level+1);
    }
}
